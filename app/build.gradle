apply plugin: 'com.android.application'


repositories {
    google()
    maven {
        url "http://artifactory.cloud.mapquest.com/artifactory/et-android-binaries"
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.chadcover.bikeridz"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.buildConfigField "String", "API_KEY", getApiKey() // Provides key for the Navigation SDK
        variant.resValue "string", "API_KEY", getApiKey()         // Provides key for the MapView used in app layouts
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-maps:10.2.1'
    implementation 'com.google.maps:google-maps-services:0.1.20'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // mapquest Android Navigation SDK
    implementation('com.mapquest:navigation:3.4.0')
    // the MapQuest Navigation SDK
    implementation('com.mapzen.android:lost:3.0.4')
    // used for GPS Location Acquisition (see notes)
    implementation('com.mapquest:mapping-android-sdk:2.0.1') {
        exclude group: 'com.android.support'
    }
    implementation('com.mapquest:searchahead:1.3.0')      // for the MapQuest "Search Ahead" feature (optional)
}

def getApiKey() {
    def props = new Properties()
    file("mapquest.properties").withInputStream { props.load(it) }
    return "\"" + props.getProperty("api_key") + "\""
}